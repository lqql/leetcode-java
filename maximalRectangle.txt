public class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix==null||matrix.length==0||matrix[0]==null)
            return 0;
        int m=matrix.length;
        int n=matrix[0].length;
        int[][] height=new int[m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(matrix[i][j]=='0')
                    height[i][j]=0;
                else{
                    height[i][j]=(i==0?1:height[i-1][j]+1);
                }
            }
        }
        int area=0;
        for(int i=0;i<m;i++){
            area=Math.max(area,maxRectangle(height[i]));
        }
        return area;
    }
    int maxRectangle(int[] height){
        Stack<Integer> stack=new Stack<Integer>();
        stack.push(0);
        int sum=0;
        for(int i=0;i<height.length;i++){
            if(stack.empty()||height[i]>height[stack.peek()])
                stack.push(i);
            else{
                int cur=stack.peek();
                stack.pop();
                sum=Math.max(sum,height[cur]*(stack.empty()?i:i-stack.peek()-1));
                i--;
            }
        }
        while(!stack.empty()){
            int cur=stack.pop();
            sum=Math.max(sum,height[cur]*(stack.empty()?height.length:height.length-stack.peek()-1));
        }
        return sum;
    }
}