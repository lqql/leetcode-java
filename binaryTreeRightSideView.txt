/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<Integer>();
        int depth=getDepth(root);
        List<List<Integer>> list= new ArrayList<List<Integer>>(depth);
        if(depth==0)
            return res;
        for(int i=0;i<depth;i++){
            list.add(new ArrayList<Integer>());
        }
        getlevel(root,0,list);
        for(int i=0;i<depth;i++){
            List<Integer> ls=list.get(i);
            res.add(ls.get(ls.size()-1));
        }
        return res;
        
    }
    int getDepth(TreeNode root){
        if(root==null)
            return 0;
        return Math.max(getDepth(root.left),getDepth(root.right))+1;
    }
    void getlevel(TreeNode root,int level,List<List<Integer>> list){
        if(root==null)
            return;
        list.get(level).add(root.val);
        getlevel(root.left,level+1,list);
        getlevel(root.right,level+1,list);
    }
    
}