/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null||headB==null)
            return null;
        ListNode p1=headA;
        ListNode p2=headB;
        int count1=0;
        int count2=0;
        while(p1!=null){
            p1=p1.next;
            count1++;
        }
        while(p2!=null){
           p2=p2.next;
           count2++;
        }
        if(count1>=count2){//注意等于的情况！
            p1=headA;
            p2=headB;
            for(int i=0;i<count1-count2;i++)
                p1=p1.next;
            while(p1!=null&&p2!=null){
                if(p1==p2)
                    return p1;
                p1=p1.next;
                p2=p2.next;
            }
        }
        else{
            p1=headA;
            p2=headB;
            for(int i=0;i<count2-count1;i++)
                p2=p2.next;
            while(p1!=null&&p2!=null){
                if(p1==p2)
                    return p1;
                p1=p1.next;
                p2=p2.next;
            }
        }
       return null; 
    }
}